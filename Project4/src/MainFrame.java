
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rutherford
 */
public class MainFrame extends javax.swing.JFrame
{

    private String filepath;
    private int SongIndex = 0;

    /**
     * Creates new form MainFrame
     */
    public MainFrame()
    {
        initComponents();
        // Set the list default model
        DefaultListModel model = new DefaultListModel();
        songlist.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        browsebutton = new javax.swing.JButton();
        loaddatabutton = new javax.swing.JButton();
        songfilepath = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        songname = new javax.swing.JTextField();
        runningtime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tracknumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        artistname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        genre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        albumname = new javax.swing.JTextField();
        releaseyear = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        coverart = new javax.swing.JLabel();
        exitbutton = new javax.swing.JButton();
        previousbutton = new javax.swing.JButton();
        nextbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        songlist = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 770));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Song File"));

        browsebutton.setText("Browse");
        browsebutton.setMaximumSize(new java.awt.Dimension(84, 29));
        browsebutton.setMinimumSize(new java.awt.Dimension(84, 29));
        browsebutton.setPreferredSize(new java.awt.Dimension(84, 29));
        browsebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsebuttonActionPerformed(evt);
            }
        });

        loaddatabutton.setText("Load Data");
        loaddatabutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loaddatabuttonActionPerformed(evt);
            }
        });

        songfilepath.setEditable(false);
        songfilepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songfilepathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(songfilepath, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loaddatabutton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browsebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browsebutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(songfilepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(loaddatabutton))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 740, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Song Info"));

        jLabel2.setText("Song");

        songname.setEditable(false);

        runningtime.setEditable(false);
        runningtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runningtimeActionPerformed(evt);
            }
        });

        jLabel3.setText("Running Time");

        tracknumber.setEditable(false);

        jLabel4.setText("Track #");

        jLabel5.setText("Artist");

        artistname.setEditable(false);
        artistname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistnameActionPerformed(evt);
            }
        });

        jLabel6.setText("Genre");

        genre.setEditable(false);

        jLabel7.setText("Album");

        jLabel8.setText("Year");

        albumname.setEditable(false);

        releaseyear.setEditable(false);

        jLabel9.setText("Cover Art");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(coverart, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 243, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(artistname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(albumname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(songname))
                .addGap(18, 43, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tracknumber, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(runningtime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(releaseyear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(songname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runningtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(3, 3, 3)
                .addComponent(tracknumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albumname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(releaseyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coverart, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 450, 540));

        exitbutton.setText("Exit");
        exitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(exitbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 680, 100, -1));

        previousbutton.setText("Previous");
        previousbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(previousbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, 100, -1));

        nextbutton.setText("Next");
        nextbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(nextbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 680, 100, -1));

        jLabel1.setText("Availabe Songs");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        songlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(songlist);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 260, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbuttonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitbuttonActionPerformed

    private void browsebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsebuttonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        songfilepath.setText(fileChooser.getSelectedFile().getAbsolutePath());
        filepath = fileChooser.getCurrentDirectory().getPath() + "\\";
    }//GEN-LAST:event_browsebuttonActionPerformed

    /**
     * Updated the currently selected song
     */
    private void updateSelectedSong()
    {
        Artist artist = (Artist) songlist.getSelectedValue();
        if (artist != null)
        {
            artistname.setText(artist.getName());
            albumname.setText(artist.getAlbum().getName());
            releaseyear.setText(artist.getAlbum().getReleaseYear());
            genre.setText(artist.getAlbum().getGenre());
            coverart.setIcon(new ImageIcon(filepath + artist.getAlbum().getCoverArt()));
            tracknumber.setText(artist.getAlbum().getSong().getTrackInfo());
            songname.setText(artist.getAlbum().getSong().getName());
            runningtime.setText(artist.getAlbum().getSong().getRunningTime());
        }
    }

    /**
     * Private add song method, called from load song data method
     *
     * @param songinfo array containing song information to process
     */
    private void addSong(String[] songinfo)
    {
        Artist artist = new Artist(songinfo);
        ((DefaultListModel) songlist.getModel()).addElement((Object) artist);
    }

    /**
     * Load song(s) data from file, and call addSong for processing
     *
     * @param filename filename to process
     * @return no errors happened then return true
     */
    private boolean loadSongData(String filename)
    {
        // Temporary array for lines read
        filename += "SongDataFile.txt";
        boolean validData = true;
        BufferedReader br = null;
        try
        {
            String curline;
            br = new BufferedReader(new FileReader(filename));
            while ((curline = br.readLine()) != null)
            {
                // Add artist method should be called here
                String[] songinfo = curline.split(",");
                if (songinfo.length == 9)
                {
                    addSong(songinfo);
                }
                // else some line in the file is bad, and we can't know that unless we report it
            } // End of while block
        } // End of try block
        catch (Exception e)
        {
            validData = false;
            System.err.println("Caught exception during file reading: " + e.getMessage());
            System.err.println(e.getStackTrace());
        } // End of catch block
        finally
        {
            try
            {
                if (br != null)
                {
                    br.close();
                } // End of if block
            } // End of try block
            catch (Exception e)
            {
                System.err.println("Caught exception during closing file: " + e.getMessage());
                System.err.println(e.getStackTrace());
            } // End of catch block
        } // End of finally block
        return validData;
    }
    private void songfilepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songfilepathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_songfilepathActionPerformed

    private void loaddatabuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loaddatabuttonActionPerformed

        loadSongData(filepath);
    }//GEN-LAST:event_loaddatabuttonActionPerformed

    private void songlistMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_songlistMouseClicked
    {//GEN-HEADEREND:event_songlistMouseClicked
        updateSelectedSong();
    }//GEN-LAST:event_songlistMouseClicked

    private void nextbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextbuttonActionPerformed
    {//GEN-HEADEREND:event_nextbuttonActionPerformed
        if (songlist.getSelectedIndex() == songlist.getModel().getSize() - 1)
        {
            songlist.setSelectedIndex(0);
        }
        else
        {
            songlist.setSelectedIndex(songlist.getSelectedIndex() + 1);
        }
        updateSelectedSong();
    }//GEN-LAST:event_nextbuttonActionPerformed

    private void previousbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_previousbuttonActionPerformed
    {//GEN-HEADEREND:event_previousbuttonActionPerformed
        if (songlist.getSelectedIndex() == 0)
        {
            songlist.setSelectedIndex(songlist.getModel().getSize() - 1);
        }
        else
        {
            songlist.setSelectedIndex(songlist.getSelectedIndex() - 1);
        }
        updateSelectedSong();
    }//GEN-LAST:event_previousbuttonActionPerformed

    private void runningtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runningtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runningtimeActionPerformed

    private void artistnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_artistnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_artistnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField albumname;
    private javax.swing.JTextField artistname;
    private javax.swing.JButton browsebutton;
    private javax.swing.JLabel coverart;
    private javax.swing.JButton exitbutton;
    private javax.swing.JTextField genre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loaddatabutton;
    private javax.swing.JButton nextbutton;
    private javax.swing.JButton previousbutton;
    private javax.swing.JTextField releaseyear;
    private javax.swing.JTextField runningtime;
    private javax.swing.JTextField songfilepath;
    private javax.swing.JList songlist;
    private javax.swing.JTextField songname;
    private javax.swing.JTextField tracknumber;
    // End of variables declaration//GEN-END:variables
}
